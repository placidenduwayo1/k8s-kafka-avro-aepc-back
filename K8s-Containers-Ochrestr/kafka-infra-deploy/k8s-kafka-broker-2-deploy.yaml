apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-2
  labels:
    app: kafka-broker-2
  namespace: kafka-db-ms-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker-2
  template:
    metadata:
      name: kafka-broker-2
      labels:
        app: kafka-broker-2
    spec:
      initContainers:
        - name: check-zookeeper-ready
          image: busybox
          command: [ '/bin/sh' ]
          args: [ '-c', 'until nc -z zookeeper 2181; do echo waiting for zookeeper service ready; sleep 5; done;']
      hostname: kafka-broker-2
      containers:
        - name: kafka-broker-2
          image: obsidiandynamics/kafka
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9093
          env:
          - name: KAFKA_BROKER_ID
            valueFrom:
              configMapKeyRef:
                key: kafka_broker_id_1
                name: kafka-infra-env-variables-cm
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            valueFrom:
              configMapKeyRef:
                key: kafka_listeners_security_protocol
                name: kafka-infra-env-variables-cm
          - name: KAFKA_ZOOKEEPER_CONNECT
            valueFrom:
              configMapKeyRef:
                key: zookeeper_connect
                name: kafka-infra-env-variables-cm
          - name: KAFKA_LISTENERS
            valueFrom:
              configMapKeyRef:
                key: kafka_listeners_2
                name: kafka-infra-env-variables-cm
          - name: KAFKA_ADVERTISED_LISTENERS
            valueFrom:
              configMapKeyRef:
                key: kafka_advertised_listeners_2
                name: kafka-infra-env-variables-cm

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-2
  labels:
    app: kafka-broker-2
  namespace: kafka-db-ms-ns
spec:
  selector:
    app: kafka-broker-2
  ports:
    - protocol: TCP
      port: 9093
      targetPort: 9093
      nodePort: 30093
      name: 9093-9093
  type: NodePort