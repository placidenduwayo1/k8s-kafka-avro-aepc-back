apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry-service
  labels:
    app: schema-registry-service
  namespace: kafka-db-ms-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry-service
  template:
    metadata:
      name: schema-registry-service
      labels:
        app: schema-registry-service
    spec:
      initContainers:
        - name: check-kafka-broker-1-ready
          image: busybox
          command: ['/bin/sh']
          args: ['-c','until nc -z kafka-broker-1 9092; do echo waiting for kafka-broker-1 ready; sleep 5; done;']
        - name: check-kafka-broker-2-ready
          image: busybox
          command: ['/bin/sh']
          args: [ '-c', 'until nc -z kafka-broker-2 9093; do echo waiting for kafka-broker-2 ready; sleep 5; done;']
        - name: check-kafka-broker-3-ready
          image: busybox
          command: [ '/bin/sh' ]
          args: [ '-c', 'until nc -z kafka-broker-3 9094; do echo waiting for kafka-broker-3 ready; sleep 5; done;']

      containers:
        - name: schema-registry-service
          image: confluentinc/cp-schema-registry:5.4.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              valueFrom:
                configMapKeyRef:
                  name: kafka-infra-env-variables-cm
                  key: schema_registry_hostname
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: kafka-infra-env-variables-cm
                  key: kafka_bootstrap_servers
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry-service
  labels:
    app: schema-registry-service
  namespace: kafka-db-ms-ns
spec:
  selector:
    app: schema-registry-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30081
      name: 8081-8081
  type: NodePort
      